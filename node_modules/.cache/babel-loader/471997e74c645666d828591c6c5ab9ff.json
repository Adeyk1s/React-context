{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrei\\\\Desktop\\\\effects-reducers-context-starter-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport styles from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (prevState, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.value,\n      isValid: action.value.includes('@')\n    };\n  }\n\n  if (action.type === \"INPUT_BLUER\") {\n    return {\n      value: prevState.value,\n      isValid: prevState.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (prevState, action) => {\n  if (action.type === \"PASSWORD_CHANGE\") {\n    return {\n      value: action.value,\n      isValid: action.value.trim().length > 7\n    };\n  }\n\n  ;\n\n  if (action.type === 'PASSWORD_BLUER') {\n    return {\n      value: prevState.value,\n      isValid: prevState.value.trim().length > 7\n    };\n  }\n\n  ;\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmailState] = useReducer(emailReducer, {\n    value: '',\n    isValid: undefined\n  });\n  const [passwordState, dispatchPasswordState] = useReducer(passwordReducer, {\n    value: '',\n    isValid: undefined\n  });\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordisValid\n  } = passwordState; //useEffect(()=>{\n  //  const timer = setTimeout(()=>{\n  //    setFormIsValid(\n  //      emailIsValid && passwordisValid\n  //    );\n  //  }, 500)\n  //  return() => {\n  //    clearTimeout(timer);\n  //  };\n  //},[emailIsValid,passwordisValid])\n\n  const emailChangeHandler = event => {\n    dispatchEmailState({\n      type: \"USER_INPUT\",\n      value: event.target.value\n    });\n    setFormIsValid(emailState.isValid && passwordState.value.trim().length > 7);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPasswordState({\n      type: \"PASSWORD_CHANGE\",\n      value: event.target.value\n    });\n    setFormIsValid(passwordState.value.includes(\"@\") && emailState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmailState({\n      type: \"INPUT_BLUER\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPasswordState({\n      type: \"PASSWORD_BLUER\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: styles.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.control} ${emailState.isValid === false ? styles.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.control} ${passwordState.isValid === false ? styles.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: styles.btn,\n          disabled: !formIsValid,\n          children: \"\\u0412\\u0445\\u043E\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"AQlxoR7z71ng/usw+4ToHUXAGOY=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Andrei/Desktop/effects-reducers-context-starter-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","styles","Button","emailReducer","prevState","action","type","value","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmailState","undefined","passwordState","dispatchPasswordState","emailIsValid","passwordisValid","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect , useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport styles from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst emailReducer = (prevState, action) => {\n  if(action.type === \"USER_INPUT\"){\n    return {\n      value: action.value,\n      isValid: action.value.includes('@'),\n    };\n  }\n  if(action.type === \"INPUT_BLUER\"){\n    return{\n      value: prevState.value,\n      isValid: prevState.value.includes('@'),\n    };\n  }\n  return {\n    value: '',\n    isValid: false,\n  };\n};\nconst passwordReducer = (prevState,action) => {\n  if(action.type === \"PASSWORD_CHANGE\"){\n    return{\n      value: action.value,\n      isValid: action.value.trim().length > 7,\n    };\n  };\n  if(action.type === 'PASSWORD_BLUER'){\n    return{\n      value: prevState.value,\n      isValid: prevState.value.trim().length > 7,\n    };\n  };\n  return{\n    value: '',\n    isValid: false,\n  };\n};\n\n\nconst Login = (props) => {\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmailState] = useReducer( emailReducer, { value: '' , isValid : undefined });\n  const [passwordState, dispatchPasswordState] = useReducer( passwordReducer, { value: '', isValid: undefined});\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordisValid} = passwordState;\n\n  //useEffect(()=>{\n  //  const timer = setTimeout(()=>{\n  //    setFormIsValid(\n  //      emailIsValid && passwordisValid\n  //    );\n  //  }, 500)\n  //  return() => {\n  //    clearTimeout(timer);\n  //  };\n  //},[emailIsValid,passwordisValid])\n\n  const emailChangeHandler = (event) => {\n    dispatchEmailState({type: \"USER_INPUT\", value: event.target.value})\n    setFormIsValid(emailState.isValid && passwordState.value.trim().length > 7);\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPasswordState({type: \"PASSWORD_CHANGE\",value: event.target.value});\n   setFormIsValid(passwordState.value.includes(\"@\") && emailState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmailState({type:\"INPUT_BLUER\"})\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPasswordState({type:\"PASSWORD_BLUER\"});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={styles.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${styles.control} ${\n            emailState.isValid === false ? styles.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${styles.control} ${\n            passwordState.isValid === false ? styles.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Пароль</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={styles.actions}>\n          <Button type=\"submit\" className={styles.btn} disabled={!formIsValid}>\n            Вход\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}