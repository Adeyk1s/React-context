{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrei\\\\Desktop\\\\effects-reducers-context-starter-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport styles from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (prevState, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.value,\n      isValid: action.value.includes('@')\n    };\n  }\n\n  if (action.type === \"INPUT_BLUER\") {\n    return {\n      value: prevState.value,\n      isValid: prevState.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (prevState, action) => {\n  if (action.type === \"PASSWORD_CHANGE\") {\n    return {\n      value: action.value,\n      isValid: action.value.trim().length > 7\n    };\n  }\n\n  ;\n\n  if (action.type === 'PASSWORD_BLUER') {\n    return {\n      value: prevState.value,\n      isValid: prevState.value.trim().length > 7\n    };\n  }\n\n  ;\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmailState] = useReducer(emailReducer, {\n    value: '',\n    isValid: undefined\n  });\n  const [passwordState, dispatchPasswordState] = useReducer(passwordReducer, {\n    value: '',\n    isValid: undefined\n  });\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordisValid\n  } = passwordState;\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setFormIsValid(emailIsValid && passwordisValid);\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [emailIsValid, passwordisValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmailState({\n      type: \"USER_INPUT\",\n      value: event.target.value\n    });\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPasswordState({\n      type: \"PASSWORD_CHANGE\",\n      value: event.target.value\n    });\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmailState({\n      type: \"INPUT_BLUER\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPasswordState({\n      type: \"PASSWORD_BLUER\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: styles.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.control} ${emailState.isValid === false ? styles.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.control} ${passwordState.isValid === false ? styles.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: styles.btn,\n          disabled: !formIsValid,\n          children: \"\\u0412\\u0445\\u043E\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"7us82jA+x3yM3N8T9mPI4AoICys=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Andrei/Desktop/effects-reducers-context-starter-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","styles","Button","emailReducer","prevState","action","type","value","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmailState","undefined","passwordState","dispatchPasswordState","emailIsValid","passwordisValid","timer","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAsCC,UAAtC,QAAwD,OAAxD;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,YAAY,GAAG,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AAC1C,MAAGA,MAAM,CAACC,IAAP,KAAgB,YAAnB,EAAgC;AAC9B,WAAO;AACLC,MAAAA,KAAK,EAAEF,MAAM,CAACE,KADT;AAELC,MAAAA,OAAO,EAAEH,MAAM,CAACE,KAAP,CAAaE,QAAb,CAAsB,GAAtB;AAFJ,KAAP;AAID;;AACD,MAAGJ,MAAM,CAACC,IAAP,KAAgB,aAAnB,EAAiC;AAC/B,WAAM;AACJC,MAAAA,KAAK,EAAEH,SAAS,CAACG,KADb;AAEJC,MAAAA,OAAO,EAAEJ,SAAS,CAACG,KAAV,CAAgBE,QAAhB,CAAyB,GAAzB;AAFL,KAAN;AAID;;AACD,SAAO;AACLF,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID,CAjBD;;AAkBA,MAAME,eAAe,GAAG,CAACN,SAAD,EAAWC,MAAX,KAAsB;AAC5C,MAAGA,MAAM,CAACC,IAAP,KAAgB,iBAAnB,EAAqC;AACnC,WAAM;AACJC,MAAAA,KAAK,EAAEF,MAAM,CAACE,KADV;AAEJC,MAAAA,OAAO,EAAEH,MAAM,CAACE,KAAP,CAAaI,IAAb,GAAoBC,MAApB,GAA6B;AAFlC,KAAN;AAID;;AAAA;;AACD,MAAGP,MAAM,CAACC,IAAP,KAAgB,gBAAnB,EAAoC;AAClC,WAAM;AACJC,MAAAA,KAAK,EAAEH,SAAS,CAACG,KADb;AAEJC,MAAAA,OAAO,EAAEJ,SAAS,CAACG,KAAV,CAAgBI,IAAhB,GAAuBC,MAAvB,GAAgC;AAFrC,KAAN;AAID;;AAAA;AACD,SAAM;AACJL,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,OAAO,EAAE;AAFL,GAAN;AAID,CAjBD;;AAoBA,MAAMK,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAACoB,UAAD,EAAaC,kBAAb,IAAmCnB,UAAU,CAAEI,YAAF,EAAgB;AAAEI,IAAAA,KAAK,EAAE,EAAT;AAAcC,IAAAA,OAAO,EAAGW;AAAxB,GAAhB,CAAnD;AACA,QAAM,CAACC,aAAD,EAAgBC,qBAAhB,IAAyCtB,UAAU,CAAEW,eAAF,EAAmB;AAAEH,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,OAAO,EAAEW;AAAtB,GAAnB,CAAzD;AAEA,QAAM;AAAEX,IAAAA,OAAO,EAAEc;AAAX,MAA4BL,UAAlC;AACA,QAAM;AAAET,IAAAA,OAAO,EAAEe;AAAX,MAA8BH,aAApC;AAEAtB,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAM0B,KAAK,GAAGC,UAAU,CAAC,MAAI;AAC3BT,MAAAA,cAAc,CACZM,YAAY,IAAIC,eADJ,CAAd;AAGD,KAJuB,EAIrB,GAJqB,CAAxB;AAKA,WAAM,MAAM;AACVG,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACD,KAFD;AAGD,GATQ,EASP,CAACF,YAAD,EAAcC,eAAd,CATO,CAAT;;AAWA,QAAMI,kBAAkB,GAAIC,KAAD,IAAW;AACpCV,IAAAA,kBAAkB,CAAC;AAACZ,MAAAA,IAAI,EAAE,YAAP;AAAqBC,MAAAA,KAAK,EAAEqB,KAAK,CAACC,MAAN,CAAatB;AAAzC,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMuB,qBAAqB,GAAIF,KAAD,IAAW;AACvCP,IAAAA,qBAAqB,CAAC;AAACf,MAAAA,IAAI,EAAE,iBAAP;AAAyBC,MAAAA,KAAK,EAAEqB,KAAK,CAACC,MAAN,CAAatB;AAA7C,KAAD,CAArB;AACD,GAFD;;AAIA,QAAMwB,oBAAoB,GAAG,MAAM;AACjCb,IAAAA,kBAAkB,CAAC;AAACZ,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAM0B,uBAAuB,GAAG,MAAM;AACpCX,IAAAA,qBAAqB,CAAC;AAACf,MAAAA,IAAI,EAAC;AAAN,KAAD,CAArB;AACD,GAFD;;AAIA,QAAM2B,aAAa,GAAIL,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACM,cAAN;AACApB,IAAAA,KAAK,CAACqB,OAAN,CAAclB,UAAU,CAACV,KAAzB,EAAgCa,aAAa,CAACb,KAA9C;AACD,GAHD;;AAKA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEN,MAAM,CAACmC,KAAxB;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEH,aAAhB;AAAA,8BACE;AACE,QAAA,SAAS,EAAG,GAAEhC,MAAM,CAACoC,OAAQ,IAC3BpB,UAAU,CAACT,OAAX,KAAuB,KAAvB,GAA+BP,MAAM,CAACqC,OAAtC,GAAgD,EACjD,EAHH;AAAA,gCAKE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,KAAK,EAAErB,UAAU,CAACV,KAHpB;AAIE,UAAA,QAAQ,EAAEoB,kBAJZ;AAKE,UAAA,MAAM,EAAEI;AALV;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AACE,QAAA,SAAS,EAAG,GAAE9B,MAAM,CAACoC,OAAQ,IAC3BjB,aAAa,CAACZ,OAAd,KAA0B,KAA1B,GAAkCP,MAAM,CAACqC,OAAzC,GAAmD,EACpD,EAHH;AAAA,gCAKE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,KAAK,EAAElB,aAAa,CAACb,KAHvB;AAIE,UAAA,QAAQ,EAAEuB,qBAJZ;AAKE,UAAA,MAAM,EAAEE;AALV;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eA6BE;AAAK,QAAA,SAAS,EAAE/B,MAAM,CAACsC,OAAvB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAEtC,MAAM,CAACuC,GAAxC;AAA6C,UAAA,QAAQ,EAAE,CAACzB,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CAhFD;;GAAMF,K;;KAAAA,K;AAkFN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect , useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport styles from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst emailReducer = (prevState, action) => {\n  if(action.type === \"USER_INPUT\"){\n    return {\n      value: action.value,\n      isValid: action.value.includes('@'),\n    };\n  }\n  if(action.type === \"INPUT_BLUER\"){\n    return{\n      value: prevState.value,\n      isValid: prevState.value.includes('@'),\n    };\n  }\n  return {\n    value: '',\n    isValid: false,\n  };\n};\nconst passwordReducer = (prevState,action) => {\n  if(action.type === \"PASSWORD_CHANGE\"){\n    return{\n      value: action.value,\n      isValid: action.value.trim().length > 7,\n    };\n  };\n  if(action.type === 'PASSWORD_BLUER'){\n    return{\n      value: prevState.value,\n      isValid: prevState.value.trim().length > 7,\n    };\n  };\n  return{\n    value: '',\n    isValid: false,\n  };\n};\n\n\nconst Login = (props) => {\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmailState] = useReducer( emailReducer, { value: '' , isValid : undefined });\n  const [passwordState, dispatchPasswordState] = useReducer( passwordReducer, { value: '', isValid: undefined});\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordisValid} = passwordState;\n\n  useEffect(()=>{\n    const timer = setTimeout(()=>{\n      setFormIsValid(\n        emailIsValid && passwordisValid\n      );\n    }, 500)\n    return() => {\n      clearTimeout(timer);\n    };\n  },[emailIsValid,passwordisValid])\n\n  const emailChangeHandler = (event) => {\n    dispatchEmailState({type: \"USER_INPUT\", value: event.target.value})\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPasswordState({type: \"PASSWORD_CHANGE\",value: event.target.value});\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmailState({type:\"INPUT_BLUER\"})\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPasswordState({type:\"PASSWORD_BLUER\"});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={styles.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${styles.control} ${\n            emailState.isValid === false ? styles.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${styles.control} ${\n            passwordState.isValid === false ? styles.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Пароль</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={styles.actions}>\n          <Button type=\"submit\" className={styles.btn} disabled={!formIsValid}>\n            Вход\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}